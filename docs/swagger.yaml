definitions:
  city.Response:
    properties:
      country_id:
        type: string
      geocenter:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  currency.Response:
    properties:
      decimals:
        type: string
      id:
        type: string
      prefix:
        type: boolean
      sing:
        type: string
    type: object
  delivery.Area:
    properties:
      latitude:
        type: string
      longitude:
        type: string
    type: object
  delivery.Period:
    properties:
      day:
        type: string
      from:
        type: string
      to:
        type: string
    type: object
  delivery.Response:
    properties:
      areas:
        items:
          $ref: '#/definitions/delivery.Area'
        type: array
      isActive:
        type: boolean
      periods:
        items:
          $ref: '#/definitions/delivery.Period'
        type: array
    type: object
  inventory.Request:
    properties:
      id:
        type: string
      is_available:
        type: string
      price:
        type: string
      price_previous:
        type: string
      price_special:
        type: string
      product_id:
        type: string
      quantity:
        type: string
      quantity_max:
        type: string
      quantity_min:
        type: string
      store_id:
        type: string
    type: object
  response.Object:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  schedule.Period:
    properties:
      day:
        type: string
      from:
        type: string
      to:
        type: string
    type: object
  schedule.Response:
    properties:
      isActive:
        type: boolean
      periods:
        items:
          $ref: '#/definitions/schedule.Period'
        type: array
    type: object
  store.Request:
    properties:
      address:
        type: string
      area:
        $ref: '#/definitions/delivery.Area'
      city:
        $ref: '#/definitions/city.Response'
      cityID:
        type: string
      currency:
        $ref: '#/definitions/currency.Response'
      delivery:
        $ref: '#/definitions/delivery.Response'
      id:
        type: string
      isActive:
        type: boolean
      location:
        type: string
      merchantID:
        type: string
      name:
        type: string
      rating:
        type: number
      schedule:
        $ref: '#/definitions/schedule.Response'
    type: object
info:
  contact: {}
paths:
  /inventories:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.Object'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: List of inventories from the database
      tags:
      - inventories
    post:
      consumes:
      - application/json
      parameters:
      - description: body param
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/inventory.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Add a new inventory to the database
      tags:
      - inventories
  /inventories/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: path param
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Delete the inventory from the database
      tags:
      - inventories
    get:
      consumes:
      - application/json
      parameters:
      - description: path param
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Read the inventory from the database
      tags:
      - inventories
    put:
      consumes:
      - application/json
      parameters:
      - description: path param
        in: path
        name: id
        required: true
        type: string
      - description: body param
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/inventory.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Update the inventory in the database
      tags:
      - inventories
  /stores:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.Object'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: List of stores from the database
      tags:
      - stores
    post:
      consumes:
      - application/json
      parameters:
      - description: body param
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/store.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Add a new store to the database
      tags:
      - stores
  /stores/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: path param
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Delete the store from the database
      tags:
      - stores
    get:
      consumes:
      - application/json
      parameters:
      - description: path param
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Read the store from the database
      tags:
      - stores
    put:
      consumes:
      - application/json
      parameters:
      - description: path param
        in: path
        name: id
        required: true
        type: string
      - description: body param
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/store.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Update the store in the database
      tags:
      - stores
swagger: "2.0"
